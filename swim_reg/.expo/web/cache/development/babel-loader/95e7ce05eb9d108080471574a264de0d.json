{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/leopoldo/Documents/LINUX DOCS/7_SWIMREG/REPOSITORY/swim_reg/src/screens/Sessions.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { SessionsContext } from \"./SessionsContext\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Session from \"../components/Sessions/SwimSessions\";\nimport { owStyles } from \"../utils/owSessionsStyles\";\nimport formStyles from \"../utils/sessionFormStyles\";\nimport t from 'tcomb-form-native';\nimport Modal from 'react-native-modal';\nimport AwesomeButtonBojack from 'react-native-really-awesome-button/src/themes/bojack';\nimport AwesomeButtonRed from 'react-native-really-awesome-button/src/themes/red';\nimport AwesomeButtonBlue from 'react-native-really-awesome-button/src/themes/blue';\nvar SubTab = createMaterialTopTabNavigator();\nvar Form = t.form.Form;\nvar SessionForm = t.struct({\n  title: t.String,\n  extra: t.maybe(t.String),\n  date: t.Date,\n  distance: t.Number,\n  minutes: t.Number,\n  seconds: t.Number\n});\nvar styles = StyleSheet.create(owStyles);\nvar titleStylesheet = formStyles.titleStyle;\nvar extraStylesheet = formStyles.extraStyle;\nvar distanceStylesheet = formStyles.distanceStyle;\nvar dateStylesheet = formStyles.dateStyle;\nvar minutesStylesheet = formStyles.minutesStyle;\nvar secondsStylesheet = formStyles.secondsStyle;\n\nfunction formTemplate(locals) {\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, locals.inputs.title, locals.inputs.extra, React.createElement(View, {\n    style: styles.dateContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, locals.inputs.date), React.createElement(View, {\n    style: styles.distanceContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.formSideText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"* DISTANCE\"), React.createElement(View, {\n    style: styles.formSideData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.distanceData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, locals.inputs.distance))), React.createElement(View, {\n    style: styles.timeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.formSideText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"* TIME\"), React.createElement(View, {\n    style: styles.formSideData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.minutesData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, locals.inputs.minutes), React.createElement(View, {\n    style: styles.secondsData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, locals.inputs.seconds))));\n}\n\nvar options = {\n  auto: 'placeholders',\n  template: formTemplate,\n  fields: {\n    title: {\n      placeholder: '* Title',\n      stylesheet: titleStylesheet\n    },\n    extra: {\n      placeholder: 'Additional info',\n      stylesheet: extraStylesheet\n    },\n    date: {\n      mode: 'date',\n      stylesheet: dateStylesheet,\n      config: {\n        defaultValueText: 'PICK DATE'\n      }\n    },\n    distance: {\n      placeholder: 'meters',\n      stylesheet: distanceStylesheet\n    },\n    minutes: {\n      placeholder: 'min',\n      stylesheet: minutesStylesheet\n    },\n    seconds: {\n      placeholder: 'sec',\n      stylesheet: secondsStylesheet\n    }\n  }\n};\n\nvar SessionsScreen = function (_React$Component) {\n  _inherits(SessionsScreen, _React$Component);\n\n  var _super = _createSuper(SessionsScreen);\n\n  function SessionsScreen() {\n    _classCallCheck(this, SessionsScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SessionsScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SubTab.Navigator, {\n        tabBarOptions: {\n          activeTintColor: 'navy',\n          inactiveTintColor: 'gray',\n          labelStyle: {\n            fontSize: 13,\n            margin: 0\n          },\n          style: {\n            elevation: 8\n          },\n          indicatorStyle: {\n            height: '100%',\n            backgroundColor: 'powderblue'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, React.createElement(SubTab.Screen, {\n        name: \"Open Water\",\n        component: SessionsOpenScreen,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }), React.createElement(SubTab.Screen, {\n        name: \"Pool\",\n        component: SessionsPoolScreen,\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return SessionsScreen;\n}(React.Component);\n\nvar SessionsOpenScreen = function (_React$Component2) {\n  _inherits(SessionsOpenScreen, _React$Component2);\n\n  var _super2 = _createSuper(SessionsOpenScreen);\n\n  function SessionsOpenScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SessionsOpenScreen);\n\n    _this = _super2.call(this, props);\n\n    _this.openForm = function () {\n      _this.setState({\n        isFormVisible: true\n      });\n    };\n\n    _this.closeForm = function () {\n      _this.setState({\n        isFormVisible: false\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var values = _this._form.getValue();\n\n      var validate = t.validate;\n      var result = validate(values, SessionForm);\n\n      if (result.isValid()) {\n        _this.context.addSession(values);\n\n        _this.setState({\n          isFormVisible: false\n        });\n      }\n    };\n\n    _this.state = {\n      isFormVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(SessionsOpenScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.fullContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }, React.createElement(AwesomeButtonBojack, {\n        style: styles.addSessionButton,\n        onPress: function onPress() {\n          return _this2.openForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, \"NEW SESSION\"), React.createElement(Modal, {\n        isVisible: this.state.isFormVisible,\n        backdropOpacity: 0.9,\n        backdropColor: '#000803',\n        color: 'white',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }, React.createElement(Form, {\n        ref: function ref(f) {\n          return _this2._form = f;\n        },\n        type: SessionForm,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }\n      }), React.createElement(View, {\n        style: styles.buttonsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.cancelContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }\n      }, React.createElement(AwesomeButtonRed, {\n        width: 150,\n        onPress: function onPress() {\n          return _this2.closeForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 33\n        }\n      }, \"CANCEL\")), React.createElement(View, {\n        style: styles.saveContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }, React.createElement(AwesomeButtonBlue, {\n        width: 150,\n        onPress: function onPress() {\n          return _this2.handleSubmit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 33\n        }\n      }, \"SAVE\"))))), React.createElement(View, {\n        style: styles.scrollContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.swimscontainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }\n      }, React.createElement(Session, {\n        sessions: this.context.sessions,\n        onDelete: this.context.onDeleteSession,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return SessionsOpenScreen;\n}(React.Component);\n\nvar SessionsPoolScreen = function (_React$Component3) {\n  _inherits(SessionsPoolScreen, _React$Component3);\n\n  var _super3 = _createSuper(SessionsPoolScreen);\n\n  function SessionsPoolScreen() {\n    _classCallCheck(this, SessionsPoolScreen);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(SessionsPoolScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return SessionsPoolScreen;\n}(React.Component);\n\nSessionsScreen.contextType = SessionsContext;\nSessionsOpenScreen.contextType = SessionsContext;\nSessionsPoolScreen.contextType = SessionsContext;\nexport default SessionsScreen;","map":{"version":3,"sources":["/home/leopoldo/Documents/LINUX DOCS/7_SWIMREG/REPOSITORY/swim_reg/src/screens/Sessions.js"],"names":["React","SessionsContext","createMaterialTopTabNavigator","Session","owStyles","formStyles","t","Modal","AwesomeButtonBojack","AwesomeButtonRed","AwesomeButtonBlue","SubTab","Form","form","SessionForm","struct","title","String","extra","maybe","date","Date","distance","Number","minutes","seconds","styles","StyleSheet","create","titleStylesheet","titleStyle","extraStylesheet","extraStyle","distanceStylesheet","distanceStyle","dateStylesheet","dateStyle","minutesStylesheet","minutesStyle","secondsStylesheet","secondsStyle","formTemplate","locals","inputs","dateContainer","distanceContainer","formSideText","formSideData","distanceData","timeContainer","minutesData","secondsData","options","auto","template","fields","placeholder","stylesheet","mode","config","defaultValueText","SessionsScreen","activeTintColor","inactiveTintColor","labelStyle","fontSize","margin","style","elevation","indicatorStyle","height","backgroundColor","SessionsOpenScreen","flex","SessionsPoolScreen","Component","props","openForm","setState","isFormVisible","closeForm","handleSubmit","values","_form","getValue","validate","result","isValid","context","addSession","state","fullContainer","addSessionButton","f","buttonsContainer","cancelContainer","saveContainer","scrollContainer","swimscontainer","sessions","onDeleteSession","contextType"],"mappings":"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","sourcesContent":["// Includes ----------------------------------------------------------------------\n\nimport React from 'react';\nimport { Picker, View, Text, TextInput, Button, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\nimport { SessionsContext } from './SessionsContext';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Session from '../components/Sessions/SwimSessions';\n//import { styles as GlobalStyles } from '../utils/styles';\nimport {owStyles} from '../utils/owSessionsStyles';\nimport formStyles from '../utils/sessionFormStyles';\nimport t from 'tcomb-form-native';\nimport Modal from 'react-native-modal';\n//import AwesomeButton from \"react-native-really-awesome-button\";\nimport AwesomeButtonBojack from 'react-native-really-awesome-button/src/themes/bojack';\nimport AwesomeButtonRed from 'react-native-really-awesome-button/src/themes/red';\nimport AwesomeButtonBlue from 'react-native-really-awesome-button/src/themes/blue';\n\n\n// Main components ---------------------------------------------------------------\n\nconst SubTab = createMaterialTopTabNavigator();\n\nconst Form = t.form.Form;\n\nconst SessionForm = t.struct({\n    title: t.String,\n    extra: t.maybe(t.String),\n    date: t.Date,\n    distance: t.Number,\n    minutes: t.Number,\n    seconds: t.Number,\n});\n\n\n// Form styles and layouts -------------------------------------------------------\n\n// Define styles\nconst styles = StyleSheet.create(owStyles);\nconst titleStylesheet = formStyles.titleStyle;\nconst extraStylesheet = formStyles.extraStyle;\nconst distanceStylesheet = formStyles.distanceStyle;\nconst dateStylesheet = formStyles.dateStyle;\nconst minutesStylesheet = formStyles.minutesStyle;\nconst secondsStylesheet = formStyles.secondsStyle;\n\n// Form general template \nfunction formTemplate(locals) {\n    return (\n        <View >\n            {locals.inputs.title}\n            {locals.inputs.extra}\n            <View style={styles.dateContainer}>\n                {locals.inputs.date}\n            </View>\n            <View style={styles.distanceContainer}>\n                <Text style={styles.formSideText}>\n                    * DISTANCE\n                </Text>\n                <View style={styles.formSideData}>\n                    <View style={styles.distanceData}>\n                        {locals.inputs.distance}\n                    </View>\n                </View>\n            </View>\n            <View style={styles.timeContainer}>\n                <Text style={styles.formSideText}>\n                    * TIME\n                </Text>\n                <View style={styles.formSideData}>\n                    <View style={styles.minutesData}>\n                        {locals.inputs.minutes}\n                    </View>\n                    <View style={styles.secondsData}>\n                        {locals.inputs.seconds}\n                    </View>\n                </View>\n            </View>\n        </View>\n    )\n}\n\n// Assign styles\nconst options = {\n    auto: 'placeholders',\n    template: formTemplate,\n    fields: {\n        title: {\n            placeholder: '* Title',\n            stylesheet: titleStylesheet,\n        },\n        extra: {\n            placeholder: 'Additional info',\n            stylesheet: extraStylesheet,\n        },\n        date: {\n            mode: 'date',\n            stylesheet: dateStylesheet,\n            config: {\n                defaultValueText: 'PICK DATE',\n            }\n        },\n        distance: {\n            placeholder: 'meters',\n            stylesheet: distanceStylesheet,\n        },\n        minutes: {\n            placeholder: 'min',\n            stylesheet: minutesStylesheet,\n        },\n        seconds: {\n            placeholder: 'sec',\n            stylesheet: secondsStylesheet,\n      },\n    },\n  };\n\n// Sessions screen ----------------------------------------------------------------  \n\nclass SessionsScreen extends React.Component {\n\n    render() {\n        return (\n            <SubTab.Navigator\n                tabBarOptions={{\n                activeTintColor: 'navy',\n                inactiveTintColor: 'gray',\n                labelStyle: {\n                    fontSize: 13,\n                    margin: 0,\n                },\n                style: {\n                    elevation: 8\n                },\n                indicatorStyle: {\n                    height: '100%',\n                    backgroundColor: 'powderblue'\n                }\n                \n                }}>\n                <SubTab.Screen name=\"Open Water\" component={SessionsOpenScreen} style={{flex: 1}}/>\n                <SubTab.Screen name=\"Pool\" component={SessionsPoolScreen} style={{flex: 1}}/>\n            </SubTab.Navigator>\n        );\n    }\n}\n\n// Sessions OPEN subtab ----------------------------------------------------------- \n\nclass SessionsOpenScreen extends React.Component {\n\n    // Constructor\n    constructor(props) {\n        super(props)\n        this.state = {\n          isFormVisible: false,\n        }     \n    }  \n    \n    // Main methods\n    openForm = () => {\n        this.setState({\n            isFormVisible: true\n        })\n    }\n\n    closeForm = () => {\n        this.setState({\n            isFormVisible: false\n        })\n    }\n\n    handleSubmit = () => {\n        const values = this._form.getValue();\n        var validate = t.validate;\n        var result = validate(values,SessionForm);\n        if (result.isValid()) {\n            this.context.addSession(values)\n            this.setState({\n                isFormVisible: false\n            })\n        } \n    }\n\n    // RENDER method\n    render() {\n\n        return (\n            <View style={styles.fullContainer}>\n\n                <AwesomeButtonBojack style={styles.addSessionButton} onPress={() => this.openForm()}>\n                    NEW SESSION\n                </AwesomeButtonBojack>\n\n                <Modal isVisible={this.state.isFormVisible} backdropOpacity={0.9} backdropColor={'#000803'} color={'white'}> \n                    <View >\n\n                        <Form \n                            ref={f => this._form = f}\n                            type={SessionForm}   \n                            options={options}                   \n                        /> \n\n                        <View style={styles.buttonsContainer}>\n                            <View style={styles.cancelContainer}>\n                                <AwesomeButtonRed width={150} onPress={() => this.closeForm()}>\n                                    CANCEL\n                                </AwesomeButtonRed>\n                            </View> \n\n                            <View style={styles.saveContainer}>\n                                <AwesomeButtonBlue width={150} onPress={() => this.handleSubmit()}>\n                                    SAVE\n                                </AwesomeButtonBlue>\n                            </View>\n                        </View>\n\n\n                    </View>\n                </Modal>\n\n                <View style={styles.scrollContainer}>\n                    <ScrollView style={styles.swimscontainer}>\n                        <Session \n                            sessions={this.context.sessions}\n                            onDelete={this.context.onDeleteSession} \n                        />\n                    </ScrollView>\n                </View>\n\n            </View>\n        );  \n    }\n}\n\n  \nclass SessionsPoolScreen extends React.Component {\n\n    render() {\n        return (\n            <View>\n            </View>\n        ); \n    }\n}\n\nSessionsScreen.contextType = SessionsContext;\nSessionsOpenScreen.contextType = SessionsContext;\nSessionsPoolScreen.contextType = SessionsContext;\n\nexport default SessionsScreen; \n\n\n\n"]},"metadata":{},"sourceType":"module"}