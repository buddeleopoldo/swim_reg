{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/leopoldo/Documents/LINUX DOCS/7_SWIMREG/REPOSITORY/swim_reg/src/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SessionsContext } from \"./screens/SessionsContext\";\nimport SessionsScreen from \"./screens/Sessions\";\nimport StatsScreen from \"./screens/Stats\";\nimport RecordsScreen from \"./screens/Records\";\nimport AccountScreen from \"./screens/Account\";\n\nvar getFormDate = function getFormDate(formDate) {\n  var date = formDate.getDate();\n  var month = formDate.getMonth() + 1;\n  var year = formDate.getFullYear();\n  return date + '-' + month + '-' + year;\n};\n\nvar Tab = createBottomTabNavigator();\n\nvar Main = function (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  var _super = _createSuper(Main);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _super.call(this, props);\n\n    _this.addSession = function (sessionObj) {\n      var sessions = _this.state.sessions;\n      var session = {\n        title: sessionObj.title,\n        createdOn: getFormDate(sessionObj.date),\n        distance: sessionObj.distance,\n        minutes: sessionObj.minutes,\n        seconds: sessionObj.seconds,\n        extra: sessionObj.extra\n      };\n      sessions.push(session);\n\n      _this.setState({\n        sessions: sessions,\n        session: ''\n      });\n\n      _this.save();\n    };\n\n    _this.onDeleteSession = function (i) {\n      var sessions = _this.state.sessions;\n      sessions.splice(i, 1);\n\n      _this.setState({\n        sessions: sessions\n      });\n\n      _this.save();\n    };\n\n    _this.loadSessions = function _callee() {\n      var sessions;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('sessions'));\n\n            case 3:\n              sessions = _context.sent;\n\n              _this.setState({\n                sessions: JSON.parse(sessions) || [],\n                loading: false\n              });\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"Error getting Swim Items >\", _context.t0);\n\n            case 10:\n              _this.save();\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.save = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              try {\n                AsyncStorage.setItem('sessions', JSON.stringify(_this.state.sessions));\n              } catch (e) {\n                console.log('Error while storing Swim Items >', e);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      loading: true,\n      session: {},\n      sessions: []\n    };\n\n    _this.loadSessions();\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"onPress\",\n    value: function onPress(num) {\n      alert('Session ' + num + ' pressed');\n    }\n  }, {\n    key: \"onLongPress\",\n    value: function onLongPress() {\n      alert('Looooong' + num + ' pressed');\n    }\n  }, {\n    key: \"formError\",\n    value: function formError(errors) {\n      alert(errors.join('\\n'));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SessionsContext.Provider, {\n        value: {\n          session: this.state.session,\n          loading: this.state.loading,\n          sessions: this.state.sessions,\n          duration: this.state.duration,\n          isFormVisible: this.state.isFormVisible,\n          onPress: this.onPress,\n          onLongPress: this.onLongPress,\n          formError: this.formError,\n          addSession: this.addSession,\n          onDeleteSession: this.onDeleteSession,\n          loadSessions: this.loadSessions,\n          save: this.save\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 26,\n          backgroundColor: 'white'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Navigator, {\n        screenOptions: function screenOptions(_ref) {\n          var route = _ref.route;\n          return {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n              var iconName;\n\n              if (route.name === 'Sessions') {\n                iconName = focused ? 'ios-list-box' : 'ios-list-box';\n                size = focused ? size + 4 : size;\n              } else if (route.name === 'Stats') {\n                iconName = focused ? 'ios-stats' : 'ios-stats';\n                size = focused ? size + 4 : size;\n              } else if (route.name === 'Records') {\n                iconName = focused ? 'md-trophy' : 'md-trophy';\n                size = focused ? size + 4 : size;\n              } else if (route.name === 'Account') {\n                iconName = focused ? 'md-person' : 'md-person';\n                size = focused ? size + 4 : size;\n              }\n\n              return React.createElement(Ionicons, {\n                name: iconName,\n                size: size,\n                color: color,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 32\n                }\n              });\n            }\n          };\n        },\n        tabBarOptions: {\n          activeTintColor: 'dodgerblue',\n          inactiveTintColor: 'gray',\n          labelStyle: {\n            fontSize: 13,\n            margin: 0,\n            padding: 5\n          },\n          style: {\n            backgroundColor: 'white',\n            height: 60\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Sessions\",\n        component: SessionsScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Stats\",\n        component: StatsScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Records\",\n        component: RecordsScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Account\",\n        component: AccountScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;\nvar styles = StyleSheet.create({\n  buttoncontainer: {\n    marginTop: 20,\n    marginLeft: 10,\n    marginRight: 10\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'dodgerblue',\n    borderRadius: 20,\n    padding: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/home/leopoldo/Documents/LINUX DOCS/7_SWIMREG/REPOSITORY/swim_reg/src/Main.js"],"names":["React","Ionicons","createBottomTabNavigator","NavigationContainer","SessionsContext","SessionsScreen","StatsScreen","RecordsScreen","AccountScreen","getFormDate","formDate","date","getDate","month","getMonth","year","getFullYear","Tab","Main","props","addSession","sessionObj","sessions","state","session","title","createdOn","distance","minutes","seconds","extra","push","setState","save","onDeleteSession","i","splice","loadSessions","AsyncStorage","getItem","JSON","parse","loading","console","log","setItem","stringify","e","num","alert","errors","join","duration","isFormVisible","onPress","onLongPress","formError","height","backgroundColor","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","labelStyle","fontSize","margin","padding","style","Component","styles","StyleSheet","create","buttoncontainer","marginTop","marginLeft","marginRight","button","alignItems","justifyContent","borderRadius","buttonText"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, AsyncStorage} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { SessionsContext } from './screens/SessionsContext';\nimport SessionsScreen from './screens/Sessions';\nimport StatsScreen from './screens/Stats';\nimport RecordsScreen from './screens/Records';\nimport AccountScreen from './screens/Account';\n\n\n/*const getCurrentDate=()=>{\n\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear();\n    return date + '-' + month + '-' + year;\n}*/\nconst getFormDate=(formDate)=>{\n\n    var date = formDate.getDate();\n    var month = formDate.getMonth() + 1;\n    var year = formDate.getFullYear();\n    return date + '-' + month + '-' + year;\n}\n\nconst Tab = createBottomTabNavigator();\n\nclass Main extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n          loading: true,\n          session: {},\n          sessions: [], \n        }     \n        this.loadSessions()\n    }  \n    \n    addSession = (sessionObj) => {\n        const sessions = this.state.sessions;\n        const session = {\n          title: sessionObj.title,\n          createdOn: getFormDate(sessionObj.date),\n          distance: sessionObj.distance,\n          minutes: sessionObj.minutes,\n          seconds: sessionObj.seconds,\n          extra: sessionObj.extra,\n        };\n        sessions.push(session);\n        this.setState({ sessions, session: '' });\n        this.save()\n    }\n\n    onDeleteSession = (i) => {\n        const sessions = this.state.sessions;\n        sessions.splice(i, 1);\n        this.setState({ sessions });\n        this.save()\n    }\n\n    loadSessions = async () => {\n        try {\n            const sessions = await AsyncStorage.getItem('sessions');\n            this.setState({\n                sessions: JSON.parse(sessions) || [],\n            loading: false\n            });\n        } catch (e) {\n            console.log(\"Error getting Swim Items >\", e);\n        }\n        this.save()\n    }; \n\n    save = async () => {\n        try {\n          AsyncStorage.setItem('sessions', JSON.stringify(this.state.sessions));\n        } catch (e) {\n          console.log('Error while storing Swim Items >', e);\n        }\n    };\n\n    onPress(num) {\n        alert('Session ' + num + ' pressed')\n      }\n\n    onLongPress() {\n        alert('Looooong' + num + ' pressed')\n    }\n    \n    formError(errors) {\n        alert(errors.join('\\n'))\n    }\n\n\n\n\n\n    render() {\n        return (\n            <SessionsContext.Provider\n                value={\n                {\n                    session: this.state.session,\n                    loading: this.state.loading,\n                    sessions: this.state.sessions,\n                    duration: this.state.duration,\n                    isFormVisible: this.state.isFormVisible,\n                    onPress: this.onPress,\n                    onLongPress: this.onLongPress,\n                    formError: this.formError,\n                    addSession: this.addSession,\n                    onDeleteSession: this.onDeleteSession,\n                    loadSessions: this.loadSessions,\n                    save: this.save,\n                }\n            }>\n                <NavigationContainer>\n                <View style={{height: 26, backgroundColor: 'white'}}></View>\n                <Tab.Navigator\n                    screenOptions={({ route }) => ({\n                    tabBarIcon: ({ focused, color, size }) => {\n                        let iconName;\n\n                        if (route.name === 'Sessions') {\n                        iconName = focused ? 'ios-list-box' : 'ios-list-box';\n                        size = focused ? size + 4 : size;\n                        } else if (route.name === 'Stats') {\n                        iconName = focused ? 'ios-stats' : 'ios-stats'  ;\n                        size = focused ? size + 4 : size;\n                        } else if (route.name === 'Records') {\n                        iconName = focused ? 'md-trophy' : 'md-trophy';\n                        size = focused ? size + 4 : size;\n                        } else if (route.name === 'Account') {\n                        iconName = focused ? 'md-person' : 'md-person';\n                        size = focused ? size + 4 : size;\n                        }\n\n                        return <Ionicons name={iconName} size={size} color={color} />;\n                    },\n                    })}\n                    tabBarOptions={{\n                    activeTintColor: 'dodgerblue',\n                    inactiveTintColor: 'gray',\n                    labelStyle: {\n                        fontSize: 13,\n                        margin: 0,\n                        padding: 5\n                    },\n                    style: {\n                        backgroundColor: 'white',\n                        height: 60\n                    },\n                    \n                    }}\n                >\n                    <Tab.Screen name=\"Sessions\" component={SessionsScreen} />\n                    <Tab.Screen name=\"Stats\" component={StatsScreen} />\n                    <Tab.Screen name=\"Records\" component={RecordsScreen} />\n                    <Tab.Screen name=\"Account\" component={AccountScreen} />\n                </Tab.Navigator>\n                </NavigationContainer>\n            </SessionsContext.Provider>\n        );\n    }\n}\n\nexport default Main;\n\n\nconst styles = StyleSheet.create({\n    buttoncontainer: {\n        marginTop: 20,\n        marginLeft: 10,\n        marginRight: 10\n    },\n    button: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'dodgerblue',\n      borderRadius: 20,\n      padding: 2\n    },\n    buttonText: {\n      color: 'white',\n      fontSize: 20, \n    }\n  });"]},"metadata":{},"sourceType":"module"}