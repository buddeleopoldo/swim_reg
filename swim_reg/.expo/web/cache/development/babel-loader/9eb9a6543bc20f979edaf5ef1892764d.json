{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/leopoldo/Documents/LINUX DOCS/7_SWIMREG/REPOSITORY/swim_reg/src/screens/Stats.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SessionsContext } from \"./SessionsContext\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nvar SubTab = createMaterialTopTabNavigator();\n\nvar StatsScreen = function (_React$Component) {\n  _inherits(StatsScreen, _React$Component);\n\n  var _super = _createSuper(StatsScreen);\n\n  function StatsScreen() {\n    _classCallCheck(this, StatsScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StatsScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SubTab.Navigator, {\n        tabBarOptions: {\n          activeTintColor: 'navy',\n          inactiveTintColor: 'gray',\n          labelStyle: {\n            fontSize: 13\n          },\n          style: {\n            backgroundColor: 'white',\n            elevation: 8\n          },\n          indicatorStyle: {\n            height: '100%',\n            backgroundColor: 'powderblue'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }\n      }, React.createElement(SubTab.Screen, {\n        name: \"Open Water\",\n        component: StatsOpenScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }), React.createElement(SubTab.Screen, {\n        name: \"Pool\",\n        component: StatsPoolScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return StatsScreen;\n}(React.Component);\n\nvar StatsOpenScreen = function (_React$Component2) {\n  _inherits(StatsOpenScreen, _React$Component2);\n\n  var _super2 = _createSuper(StatsOpenScreen);\n\n  function StatsOpenScreen() {\n    _classCallCheck(this, StatsOpenScreen);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(StatsOpenScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return StatsOpenScreen;\n}(React.Component);\n\nvar StatsPoolScreen = function (_React$Component3) {\n  _inherits(StatsPoolScreen, _React$Component3);\n\n  var _super3 = _createSuper(StatsPoolScreen);\n\n  function StatsPoolScreen() {\n    _classCallCheck(this, StatsPoolScreen);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(StatsPoolScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return StatsPoolScreen;\n}(React.Component);\n\nStatsScreen.contextType = SessionsContext;\nStatsOpenScreen.contextType = SessionsContext;\nStatsPoolScreen.contextType = SessionsContext;\nexport default StatsScreen;","map":{"version":3,"sources":["/home/leopoldo/Documents/LINUX DOCS/7_SWIMREG/REPOSITORY/swim_reg/src/screens/Stats.js"],"names":["React","SessionsContext","createMaterialTopTabNavigator","SubTab","StatsScreen","activeTintColor","inactiveTintColor","labelStyle","fontSize","style","backgroundColor","elevation","indicatorStyle","height","StatsOpenScreen","StatsPoolScreen","Component","contextType"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,SAASC,eAAT;AACA,SAASC,6BAAT,QAA8C,qCAA9C;AAEA,IAAMC,MAAM,GAAGD,6BAA6B,EAA5C;;IAEME,W;;;;;;;;;;;;;6BACO;AACL,aACA,oBAAC,MAAD,CAAQ,SAAR;AACI,QAAA,aAAa,EAAE;AACfC,UAAAA,eAAe,EAAE,MADF;AAEfC,UAAAA,iBAAiB,EAAE,MAFJ;AAGfC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE;AADF,WAHG;AAMfC,UAAAA,KAAK,EAAE;AACHC,YAAAA,eAAe,EAAE,OADd;AAEHC,YAAAA,SAAS,EAAE;AAFR,WANQ;AAUfC,UAAAA,cAAc,EAAE;AACZC,YAAAA,MAAM,EAAE,MADI;AAEZH,YAAAA,eAAe,EAAE;AAFL;AAVD,SADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiBI,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,YAApB;AAAiC,QAAA,SAAS,EAAEI,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBJ,EAkBI,oBAAC,MAAD,CAAQ,MAAR;AAAe,QAAA,IAAI,EAAC,MAApB;AAA2B,QAAA,SAAS,EAAEC,eAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,CADA;AAsBH;;;;EAxBqBf,KAAK,CAACgB,S;;IA2B1BF,e;;;;;;;;;;;;;6BACO;AACL,aAEA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA;AAKH;;;;EAPyBd,KAAK,CAACgB,S;;IAU9BD,e;;;;;;;;;;;;;6BACO;AACL,aACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAIH;;;;EANyBf,KAAK,CAACgB,S;;AAUpCZ,WAAW,CAACa,WAAZ,GAA0BhB,eAA1B;AACAa,eAAe,CAACG,WAAhB,GAA8BhB,eAA9B;AACAc,eAAe,CAACE,WAAhB,GAA8BhB,eAA9B;AAGA,eAAeG,WAAf","sourcesContent":["import React from 'react';\nimport { Text, View, ScrollView, Button, TouchableHighlight, StyleSheet} from 'react-native';\nimport { SessionsContext } from './SessionsContext';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n\nconst SubTab = createMaterialTopTabNavigator();\n\nclass StatsScreen extends React.Component {\n    render() {\n        return (\n        <SubTab.Navigator\n            tabBarOptions={{\n            activeTintColor: 'navy',\n            inactiveTintColor: 'gray',\n            labelStyle: {\n                fontSize: 13,\n            },\n            style: {\n                backgroundColor: 'white',\n                elevation: 8\n            },\n            indicatorStyle: {\n                height: '100%',\n                backgroundColor: 'powderblue'\n                }\n            \n            }}>\n            <SubTab.Screen name=\"Open Water\" component={StatsOpenScreen} />\n            <SubTab.Screen name=\"Pool\" component={StatsPoolScreen} />\n        </SubTab.Navigator>\n        );\n    }\n}\n\nclass StatsOpenScreen extends React.Component {\n    render() {\n        return (\n\n        <ScrollView >\n        </ScrollView>\n        );\n    }\n}\n    \nclass StatsPoolScreen extends React.Component {\n    render() {\n        return (\n            <ScrollView >\n            </ScrollView>\n        );\n    }\n}\n\n\nStatsScreen.contextType = SessionsContext;\nStatsOpenScreen.contextType = SessionsContext;\nStatsPoolScreen.contextType = SessionsContext;\n\n\nexport default StatsScreen;"]},"metadata":{},"sourceType":"module"}